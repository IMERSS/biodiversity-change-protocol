labs(title = thisTarget,
x = "Extirpation probability",
y = "Density") +
theme_minimal(base_family = "Arial") +
theme(
legend.position = "right",
text = element_text(size = 12), # Reduced overall font size
legend.key.width = unit(2, "line"),
plot.title = element_text(size = 14),
axis.title = element_text(size = 12), # Decreased x and y labels
axis.title.x = element_text(margin = margin(t = 10)), # Add space between x-axis label and ticks
axis.title.y = element_text(margin = margin(r = 10)), # Add space between y-axis label and ticks
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
}
plot_site_beta(prim_stats_historical)
plot_site_beta <- function (rec) {
x <- seq(0, 1, length.out = 100)
# Swap around alpha and beta for display
y <- dbeta(x, shape1 = as.numeric(rec$beta), shape2 = as.numeric(rec$alpha))
ggplot() +
geom_line(aes(x = x, y = y, color = "Extirpation Posterior Density"), size = 1, linetype = "solid") +
scale_color_manual(values = c("Extirpation Posterior Density" = "#4fabeb")) +
labs(title = thisTarget,
x = "Extirpation probability",
y = "Density") +
theme_minimal(base_family = "Arial") +
theme(
legend.position = "right",
text = element_text(size = 12), # Reduced overall font size
legend.key.width = unit(2, "line"),
plot.title = element_text(size = 14),
axis.title = element_text(size = 12), # Decreased x and y labels
axis.title.x = element_text(margin = margin(t = 10)), # Add space between x-axis label and ticks
axis.title.y = element_text(margin = margin(r = 10)), # Add space between y-axis label and ticks
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
}
plot_site_beta(prim_stats_historical)
plot_site_beta <- function (rec) {
x <- seq(0, 1, length.out = 100)
# Swap around alpha and beta for display
y <- dbeta(x, shape1 = as.numeric(rec$beta), shape2 = as.numeric(rec$alpha))
ggplot() +
geom_line(aes(x = x, y = y, color = "Extirpation Posterior Density"), size = 1, linetype = "solid") +
labs(x = "Extirpation probability",
y = "Density") +
theme_minimal(base_family = "Arial") +
theme(
legend.position = "right",
text = element_text(size = 12), # Reduced overall font size
legend.key.width = unit(2, "line"),
plot.title = element_text(size = 14),
axis.title = element_text(size = 12), # Decreased x and y labels
axis.title.x = element_text(margin = margin(t = 10)), # Add space between x-axis label and ticks
axis.title.y = element_text(margin = margin(r = 10)), # Add space between y-axis label and ticks
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
}
plot_site_beta(prim_stats_historical)
plot_site_beta <- function (rec) {
x <- seq(0, 1, length.out = 100)
# Swap around alpha and beta for display
y <- dbeta(x, shape1 = as.numeric(rec$beta), shape2 = as.numeric(rec$alpha))
ggplot() +
geom_line(aes(x = x, y = y, color = "Extirpation Posterior Density"), size = 1, linetype = "solid") +
scale_color_manual(values = c("Extirpation Posterior Density" = "#4fabeb"),
name = "Densities") +
labs(title = thisTarget,
x = "Extirpation probability",
y = "Density") +
theme_minimal(base_family = "Arial") +
theme(
legend.position = "right",
text = element_text(size = 12), # Reduced overall font size
legend.key.width = unit(2, "line"),
plot.title = element_text(size = 14),
axis.title = element_text(size = 12), # Decreased x and y labels
axis.title.x = element_text(margin = margin(t = 10)), # Add space between x-axis label and ticks
axis.title.y = element_text(margin = margin(r = 10)), # Add space between y-axis label and ticks
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
}
plot_site_beta(prim_stats_historical)
plot_site_beta <- function (rec) {
x <- seq(0, 1, length.out = 100)
# Swap around alpha and beta for display
y <- dbeta(x, shape1 = as.numeric(rec$beta), shape2 = as.numeric(rec$alpha))
ggplot() +
geom_line(aes(x = x, y = y, color = "Extirpation Posterior Density"), size = 1, linetype = "solid") +
scale_color_manual(values = c("Extirpation Posterior Density" = "#4fabeb"),
name = "") +
labs(title = thisTarget,
x = "Extirpation probability",
y = "Density") +
theme_minimal(base_family = "Arial") +
theme(
legend.position = "right",
text = element_text(size = 12), # Reduced overall font size
legend.key.width = unit(2, "line"),
plot.title = element_text(size = 14),
axis.title = element_text(size = 12), # Decreased x and y labels
axis.title.x = element_text(margin = margin(t = 10)), # Add space between x-axis label and ticks
axis.title.y = element_text(margin = margin(r = 10)), # Add space between y-axis label and ticks
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
}
plot_site_beta(prim_stats_historical)
plot_site_beta <- function (rec) {
x <- seq(0, 1, length.out = 100)
# Swap around alpha and beta for display
y <- dbeta(x, shape1 = as.numeric(rec$beta), shape2 = as.numeric(rec$alpha))
ggplot() +
geom_line(aes(x = x, y = y, color = "Extirpation Posterior Density"), size = 1, linetype = "solid") +
scale_color_manual(values = c("Extirpation Probability Posterior Density" = "#4fabeb"),
name = "") +
labs(title = thisTarget,
x = "Extirpation probability",
y = "Density") +
theme_minimal(base_family = "Arial") +
theme(
legend.position = "right",
text = element_text(size = 12), # Reduced overall font size
legend.key.width = unit(2, "line"),
plot.title = element_text(size = 14),
axis.title = element_text(size = 12), # Decreased x and y labels
axis.title.x = element_text(margin = margin(t = 10)), # Add space between x-axis label and ticks
axis.title.y = element_text(margin = margin(r = 10)), # Add space between y-axis label and ticks
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
}
plot_site_beta(target_stats_historical)
target_stats <- read.csv("Analysis_outputs/Intermediate/Primula pauciflora_stats.csv")
target_stats_historical <- target_stats %>% dplyr::filter(Population == 77)
paged_table(target_stats_historical)
plot_site_beta(target_stats_historical)
source(".Rprofile")
build_all <- function () {
blogdown::build_site(build_rmd = TRUE)
}
build_changed <- function () {
blogdown::build_site(build_rmd = "timestamp")
}
build_all()
source(".Rprofile")
build_all <- function () {
blogdown::build_site(build_rmd = TRUE)
}
build_changed <- function () {
blogdown::build_site(build_rmd = "timestamp")
}
build_all()
source(".Rprofile")
build_all <- function () {
blogdown::build_site(build_rmd = TRUE)
}
build_changed <- function () {
blogdown::build_site(build_rmd = "timestamp")
}
build_all()
source(".Rprofile")
build_all <- function () {
blogdown::build_site(build_rmd = TRUE)
}
build_changed <- function () {
blogdown::build_site(build_rmd = "timestamp")
}
build_all()
source(".Rprofile")
build_all <- function () {
blogdown::build_site(build_rmd = TRUE)
}
build_changed <- function () {
blogdown::build_site(build_rmd = "timestamp")
}
build_all()
build_all()
build_all()
build_all()
build_all()
build_all()
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
source("R/site_globals.R")
source("scripts/geomUtils.R")
source("scripts/config.R")
library(leaflet)
trim_effortId <- function (df) {
df %>%
mutate(effortId = if_else(
nchar(effortId) > 10,
paste0(substr(effortId, 1, 10), "..."),
effortId
))
}
prim_agm <- read.csv("Analysis_outputs/Intermediate/Primula pauciflora_accepted_grouped_merged.csv")
prim_sf = assign_cell_geometry_sf(prim_agm, galgrid)
pal <- colorNumeric(palette = "viridis", domain = range(c(0, prim_sf$search_effort), na.rm = TRUE))
m <- leaflet(data = prim_sf) %>%
# Add a Tiles layer to the map
addTiles() %>%
# Add the grid layer to the map
addPolygons(fillColor = ~pal(search_effort), fillOpacity = 0.8,
color = "#BDBDC3", weight = 1) %>%
# Add a legend
addLegend(pal = pal, values = c(0, max(prim_sf$search_effort, na.rm = TRUE)),
opacity = 0.8, title = "Accumulated Search Effort in ks")
# Print the map
m
target_stats <- read.csv("Analysis_outputs/Intermediate/Primula pauciflora_stats.csv")
target_stats_all <- target_stats %>% dplyr::filter(Population == "all")
paged_table(target_stats_all)
library(ggplot2)
plot_site_beta(target_stats_all, "Primula pauciflora")
build_all()
target_stats <- read.csv("Analysis_outputs/Intermediate/Primula pauciflora_stats.csv")
target_stats_all <- target_stats %>% dplyr::filter(Population == "all")
paged_table(target_stats_all)
build_all()
library(dplyr)
target_stats <- read.csv("Analysis_outputs/Intermediate/Primula pauciflora_stats.csv")
target_stats_all <- target_stats %>% dplyr::filter(Population == "all")
paged_table(target_stats_all)
build_all()
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
source("R/site_globals.R")
source("scripts/geomUtils.R")
source("scripts/config.R")
library(leaflet)
trim_effortId <- function (df) {
df %>%
mutate(effortId = if_else(
nchar(effortId) > 10,
paste0(substr(effortId, 1, 10), "..."),
effortId
))
}
prim_agm <- read.csv("Analysis_outputs/Intermediate/Primula pauciflora_accepted_grouped_merged.csv")
prim_sf = assign_cell_geometry_sf(prim_agm, galgrid)
pal <- colorNumeric(palette = "viridis", domain = range(c(0, prim_sf$search_effort), na.rm = TRUE))
m <- leaflet(data = prim_sf) %>%
# Add a Tiles layer to the map
addTiles() %>%
# Add the grid layer to the map
addPolygons(fillColor = ~pal(search_effort), fillOpacity = 0.8,
color = "#BDBDC3", weight = 1) %>%
# Add a legend
addLegend(pal = pal, values = c(0, max(prim_sf$search_effort, na.rm = TRUE)),
opacity = 0.8, title = "Accumulated Search Effort in ks")
# Print the map
m
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
source("R/site_globals.R")
source("scripts/geomUtils.R")
source("scripts/config.R")
library(leaflet)
trim_effortId <- function (df) {
df %>%
mutate(effortId = if_else(
nchar(effortId) > 10,
paste0(substr(effortId, 1, 10), "..."),
effortId
))
}
prim_agm <- read.csv("Analysis_outputs/Intermediate/Primula pauciflora_accepted_grouped_merged.csv")
prim_sf = assign_cell_geometry_sf(prim_agm, galgrid)
pal <- colorNumeric(palette = "viridis", domain = range(c(0, prim_sf$search_effort), na.rm = TRUE))
m <- leaflet(data = prim_sf) %>%
# Add a Tiles layer to the map
addTiles() %>%
# Add the grid layer to the map
addPolygons(fillColor = ~pal(search_effort), fillOpacity = 0.8,
color = "#BDBDC3", weight = 1) %>%
# Add a legend
addLegend(pal = pal, values = c(0, max(prim_sf$search_effort, na.rm = TRUE)),
opacity = 0.8, title = "Accumulated Search Effort in ks")
# Print the map
m
library(dplyr)
target_stats <- read.csv("Analysis_outputs/Intermediate/Primula pauciflora_stats.csv")
target_stats_all <- target_stats %>% dplyr::filter(Population == "all")
paged_table(target_stats_all)
build_all()
build_all()
build_changed()
prim_agm <- read.csv("Analysis_outputs/Intermediate/Crassula connata_accepted_grouped_merged.csv")
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
source("R/site_globals.R")
source("scripts/geomUtils.R")
source("scripts/config.R")
library(leaflet)
library(rmarkdown)
library(dplyr)
library(ggplot2)
prim_agm <- read.csv("Analysis_outputs/Intermediate/Crassula connata_accepted_grouped_merged.csv")
prim_historical <- prim_agm %>% dplyr::filter(assigned_community == 77)
prim_sf = assign_cell_geometry_sf(prim_historical, galgrid)
pal <- colorNumeric(palette = "viridis", domain = range(c(0, prim_sf$search_effort), na.rm = TRUE))
m <- leaflet(data = prim_sf) %>%
# Add a Tiles layer to the map
addTiles() %>%
# Add the grid layer to the map
addPolygons(fillColor = ~pal(search_effort), fillOpacity = 0.8,
color = "#BDBDC3", weight = 1) %>%
# Add a legend
addLegend(pal = pal, values = c(0, max(prim_sf$search_effort, na.rm = TRUE)),
opacity = 0.8, title = "Accumulated Search Effort in ks")
# Print the map
m
cracon_agm <- read.csv("Analysis_outputs/Intermediate/Crassula connata_accepted_grouped_merged.csv")
unique(cracon_agm$assigned_community)
cracon_agm <- read.csv("Analysis_outputs/Intermediate/Crassula connata_accepted_grouped_merged.csv")
cracon_historical <- prim_agm %>% dplyr::filter(assigned_community == 44)
cracon_sf = assign_cell_geometry_sf(cracon_historical, galgrid)
pal <- colorNumeric(palette = "viridis", domain = range(c(0, prim_sf$search_effort), na.rm = TRUE))
m <- leaflet(data = prim_sf) %>%
# Add a Tiles layer to the map
addTiles() %>%
# Add the grid layer to the map
addPolygons(fillColor = ~pal(search_effort), fillOpacity = 0.8,
color = "#BDBDC3", weight = 1) %>%
# Add a legend
addLegend(pal = pal, values = c(0, max(prim_sf$search_effort, na.rm = TRUE)),
opacity = 0.8, title = "Accumulated Search Effort in ks")
# Print the map
m
cracon_agm <- read.csv("Analysis_outputs/Intermediate/Crassula connata_accepted_grouped_merged.csv")
cracon_historical <- cracon_agm %>% dplyr::filter(assigned_community == 44)
cracon_sf = assign_cell_geometry_sf(cracon_historical, galgrid)
pal <- colorNumeric(palette = "viridis", domain = range(c(0, prim_sf$search_effort), na.rm = TRUE))
m <- leaflet(data = prim_sf) %>%
# Add a Tiles layer to the map
addTiles() %>%
# Add the grid layer to the map
addPolygons(fillColor = ~pal(search_effort), fillOpacity = 0.8,
color = "#BDBDC3", weight = 1) %>%
# Add a legend
addLegend(pal = pal, values = c(0, max(prim_sf$search_effort, na.rm = TRUE)),
opacity = 0.8, title = "Accumulated Search Effort in ks")
# Print the map
m
cracon_agm <- read.csv("Analysis_outputs/Intermediate/Crassula connata_accepted_grouped_merged.csv")
cracon_historical <- cracon_agm %>% dplyr::filter(assigned_community == 44)
cracon_sf = assign_cell_geometry_sf(cracon_historical, galgrid)
pal <- colorNumeric(palette = "viridis", domain = range(c(0, cracon_sf$search_effort), na.rm = TRUE))
m <- leaflet(data = cracon_sf) %>%
# Add a Tiles layer to the map
addTiles() %>%
# Add the grid layer to the map
addPolygons(fillColor = ~pal(search_effort), fillOpacity = 0.8,
color = "#BDBDC3", weight = 1) %>%
# Add a legend
addLegend(pal = pal, values = c(0, max(prim_sf$search_effort, na.rm = TRUE)),
opacity = 0.8, title = "Accumulated Search Effort in ks")
# Print the map
m
cracon_historical
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
source("R/site_globals.R")
source("scripts/geomUtils.R")
source("scripts/config.R")
library(leaflet)
library(rmarkdown)
library(dplyr)
library(ggplot2)
cracon_agm <- read.csv("Analysis_outputs/Intermediate/Crassula connata_accepted_grouped_merged.csv")
cracon_historical <- cracon_agm %>% dplyr::filter(assigned_community == 44)
cracon_sf = assign_cell_geometry_sf(cracon_historical, galgrid)
pal <- colorNumeric(palette = "viridis", domain = range(c(0, cracon_sf$search_effort), na.rm = TRUE))
m <- leaflet(data = cracon_sf) %>%
# Add a Tiles layer to the map
addTiles() %>%
# Add the grid layer to the map
addPolygons(fillColor = ~pal(search_effort), fillOpacity = 0.8,
color = "#BDBDC3", weight = 1) %>%
# Add a legend
addLegend(pal = pal, values = c(0, max(prim_sf$search_effort, na.rm = TRUE)),
opacity = 0.8, title = "Accumulated Search Effort in ks")
# Print the map
m
cracon_historical_trunc <- prim_historical %>% trim_effortId
paged_table(cracon_historical_trunc)
cracon_historical_trunc <- cracon_historical %>% trim_effortId
paged_table(cracon_historical_trunc)
target_stats <- read.csv("Analysis_outputs/Intermediate/Crassula connata.csv")
target_stats <- read.csv("Analysis_outputs/Intermediate/Crassula connata_stats.csv")
target_stats_historical <- target_stats %>% dplyr::filter(Population == 44)
paged_table(target_stats_historical)
plot_site_beta(target_stats_historical, "Crassula connata")
build_all()
cracon_agm <- read.csv("Analysis_outputs/Intermediate/Crassula connata_accepted_grouped_merged.csv")
cracon_historical <- cracon_agm %>% dplyr::filter(assigned_community == 44)
cracon_sf = assign_cell_geometry_sf(cracon_historical, galgrid)
pal <- colorNumeric(palette = "viridis", domain = range(c(0, cracon_sf$search_effort), na.rm = TRUE))
m <- leaflet(data = cracon_sf) %>%
# Add a Tiles layer to the map
addTiles() %>%
# Add the grid layer to the map
addPolygons(fillColor = ~pal(search_effort), fillOpacity = 0.8,
color = "#BDBDC3", weight = 1) %>%
# Add a legend
addLegend(pal = pal, values = c(0, max(prim_sf$search_effort, na.rm = TRUE)),
opacity = 0.8, title = "Accumulated Search Effort in ks")
# Print the map
m
build_all()
build_changed()
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
source("R/site_globals.R")
source("scripts/geomUtils.R")
source("scripts/config.R")
library(leaflet)
library(rmarkdown)
library(dplyr)
library(ggplot2)
cracon_agm <- read.csv("Analysis_outputs/Intermediate/Crassula connata pauciflora_accepted_grouped_merged.csv")
cracon_agm <- read.csv("Analysis_outputs/Intermediate/Crassula connata_accepted_grouped_merged.csv")
cracon_sf = assign_cell_geometry_sf(cracon_agm, galgrid)
pal <- colorNumeric(palette = "viridis", domain = range(c(0, cracon_sf$search_effort), na.rm = TRUE))
m <- leaflet(data = cracon_sf) %>%
# Add a Tiles layer to the map
addTiles() %>%
# Add the grid layer to the map
addPolygons(fillColor = ~pal(search_effort), fillOpacity = 0.8,
color = "#BDBDC3", weight = 1) %>%
# Add a legend
addLegend(pal = pal, values = c(0, max(cracon_sf$search_effort, na.rm = TRUE)),
opacity = 0.8, title = "Accumulated Search Effort in ks")
# Print the map
m
target_stats <- read.csv("Analysis_outputs/Intermediate/Crassula connata_stats.csv")
target_stats_all <- target_stats %>% dplyr::filter(Population == "all")
paged_table(target_stats_all)
plot_site_beta(target_stats_all, "Crassula connata")
build_all()
build_all()
source(".Rprofile")
build_all <- function () {
unlink("public", recursive=TRUE)
blogdown::build_site(build_rmd = TRUE)
}
build_changed <- function () {
blogdown::build_site(build_rmd = "timestamp")
}
build_all()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
source(".Rprofile")
build_all <- function () {
unlink("public", recursive=TRUE)
blogdown::build_site(build_rmd = TRUE)
}
build_changed <- function () {
blogdown::build_site(build_rmd = "timestamp")
}
build_all()
blogdown::serve_site()
source(".Rprofile")
build_all <- function () {
unlink("public", recursive=TRUE)
blogdown::build_site(build_rmd = TRUE)
}
build_changed <- function () {
blogdown::build_site(build_rmd = "timestamp")
}
build_all()
blogdown::serve_site()
source(".Rprofile")
build_all <- function () {
unlink("public", recursive=TRUE)
blogdown::build_site(build_rmd = TRUE)
}
build_changed <- function () {
blogdown::build_site(build_rmd = "timestamp")
}
build_all()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
summary <- read.csv("Galiano_Tracheophyta_summary_reviewed_2024-10-07.csv")
summary <- read.csv("../scripts/historical_analysis/Galiano_Tracheophyta_summary_reviewed_2024-10-07.csv")
summary <- read.csv("scripts/historical_analysis/Galiano_Tracheophyta_summary_reviewed_2024-10-07.csv")
summary <- read.csv("scripts/historical_analysis/Galiano_Tracheophyta_summary_reviewed_2024-10-07.csv")
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
summary <- read.csv("scripts/historical_analysis/Galiano_Tracheophyta_summary_reviewed_2024-10-07.c
summary <- read.csv("scripts/historical_analysis/Galiano_Tracheophyta_summary_reviewed_2024-10-07.csv")
summary <- read.csv("scripts/historical_analysis/Galiano_Tracheophyta_summary_reviewed_2024-10-07.csv")
reported <- summary %>% filter(Reporting.Status == 'reported')
source("R/site_globals.R")
source("scripts/geomUtils.R")
source("scripts/config.R")
library(leaflet)
library(rmarkdown)
library(dplyr)
library(ggplot2)
summary <- read.csv("scripts/historical_analysis/Galiano_Tracheophyta_summary_reviewed_2024-10-07.csv")
# Filter historically reported species (not observed in the last twenty years)
reported <- summary %>% filter(Reporting.Status == 'reported')
# Filter native species
reported.native <- reported %>% filter(Provenance)
reported.native <- reported %>% filter(Origin == 'native')
blogdown::serve_site()
View(reported.native)
blogdown::serve_site()
